
     
                             ВВЕДЕНИЕ

      Система GPSS/PC  предназначена  для имитационного  моделирования
производственных систем. В системе GPSS/PC языком  моделирования явля-
ется язык GPSS/PC.
      Наиболее распространенным методом описания систем  является сос-
тавление блок-диаграмм. Блок-диаграмма - это графическое представление
операций, происходящих внутри системы. Другими словами, блок-диаграмма
описывает  взаимодействие  событий внутри  системы. Линии, соединяющие
блоки, указывают  маршруты потоков  сообщений или описывают последова-
тельность выполняемых событий. В случае нескольких  вариантов действий
от блока отходят несколько  линий. Если же к блоку  подходят несколько
линий, то это  означает, что  выполняемая операция  является общей для
двух или более последовательностей блоков. Выбор  логических путей мо-
жет  основываться на  статистических или логических условиях, действу-
ющих в момент выбора.
      В GPSS/PC  имеется  определенное  количество  типов  блоков  для
задания  объектов  и  операций  над ними.  Каждому блоку соответствует
графическое  изображение  на  блок-диаграмме.  Стрелки  между  блоками
указывают маршруты потоков сообщений.
      Далее, для того,  чтобы применить  язык  моделирования  GPSS/PC,
каждый   блок  блок-диаграммы  заменяется  соответствующим  оператором
GPSS/PC.
      
                         1. ОБЪЕКТЫ   GPSS/PC

      Объекты в  моделируемой системе предназначены для  различных це-
лей. Выбор объектов в конкретной  моделируемой системе  зависит от ха-
рактеристик  модели и, в некоторых  случаях,  от специалиста,составля-
ющего модель. Совершенно не обязательно, чтобы в одной модели участво-
вали все типы  объектов. Обязательным является  лишь то, что в  каждой
модели должны быть блоки и сообщения, иначе просчитать ее будет невоз-
можно. Какие  объекты, помимо  сообщений и  блоков, будут  включены  в
модель,  будет  зависеть  от  того,  какие именно используются блоки и
операнды блоков (которые могут повлечь появление  операторов  описания
других объектов).
      
      1.1. Сообщения

      Сообщения(транзакты) - это  динамические  объекты  GPSS/PC.  Они
создаются в определенных точках модели,  продвигаются  интерпретатором
через  блоки,  а  затем  уничтожаются.  Сообщения  являются  аналогами
единиц-потоков в реальной  системе. Они могут  представлять собой раз-
личные элементы даже в одной системе. Практически все изменения состо-
яния  моделей происходят  в результате  входа сообщений в блоки и пос-
ледующего  выполнения подпрограмм  системы  моделирования, связанных с
соответствующими типами блоков.
      Каждое продвижение   считается    событием,    которое    должно
происходить   в   конкретный  момент  времени.  Интерпретатор  GPSS/PC
автоматически определяет моменты наступления событий.  В тех  случаях,
когда событие не может произойти,  хотя момент его наступил (например,
при попытке  занять устройство, когда оно  уже занято), сообщение пре-
кращает продвижение до снятия блокирующего условия.
      Сообщения нумеруются  последовательно,  начиная  с   номера   1.
Параметры  сообщений  принимают  значения  из  множества  целых чисел.
Каждое сообщение имеет один или более параметров. Параметры нумеруют-
ся. Сообщение может обращаться только к своим параметрам. Номера пара-
метров используются для  ссылок  на  значения, присвоенные параметрам.

                                - 2 -

Сообщениям может присваиваться приоритет, используемый системой в ходе
моделирования.

      1.2. Блоки

      После  того,  как  система  описана, исходя из операций, которые
она выполняет,  ее нужно описать на языке  GPSS/PC,  используя  блоки,
которые выполняют соответствующие операции в модели.
      В блоках могут происходить события четырех  основных  типов:
      1) создание  или  уничтожение  сообщений;
      2)  изменение  числового атрибута объекта;
      3) задержка сообщения на определенный  период времени;
      4)  изменение  маршрута  сообщения  в  модели.

      1.3. Одноканальные  устройства

      Аналогами  обслуживающих  приборов  и  реальных систем в GPSS/PC
являются объекты типа "оборудование".  К объектам этого типа относятся
одноканальные  устройства и  многоканальные  устройства. Одноканальные
устройства (в дальнейшем их будем называть  устройствами) представляют
собой оборудование, которое в любой  момент времени может  быть занято
только  одним сообщением.  Интерпретатор записывает  информацию о том,
какое сообщение  в настоящий  момент занимает  устройство. Если другое
сообщение попытается захватить устройство, то это сообщение задержива-
ется до тех пор, пока  устройство не  освободится. Программа автомати-
чески подсчитывает общее время занятости устройства. Это значение поз-
воляет определить коэффициент использования устройства. Подсчитывается
также общее число сообщений, занимавших устройство, что  позволяет вы-
числить среднее время занятости устройства одним сообщением.

      1.4. Многоканальные  устройства

      В GPSS/PC  многоканальные  устройства  представляют объекты типа
"оборудование" для параллельной обработки, они могут быть использованы
несколькими   сообщениями   одновременно.   Многоканальные  устройства
используются для  представления  физического  оборудования,  например,
зрительного зала театра,  стоянки автомобилей и,  в некоторых случаях,
основной  памяти  в  системах  для  обработки   данных.   Пользователь
определяет емкость каждого многоканального устройства, используемого в
модели,  а  интерпретатор  ведет  учет  числа  единиц   многоканальных
устройств,  занятых  в каждый момент времени.  Если сообщение пытается
занять больше единиц многоканального устройства, чем свободно в данный
момент,  обработка этого сообщения задерживается до того момента, пока
в многоканальном устройстве освободится достаточный объем.
      Программа автоматически ведет подсчет числа сообщений,  входящих
в многоканальное устройство.  Определяется также среднее число  единиц
многоканальных  устройств,  занятых одним сообщением,  и среднее время
пребывания сообщения в многоканальном устройстве.  Эти  статистические
данные  выдаются  в  конце  счета  и  позволяют определить,  насколько
эффективно используются в системе  объекты  параллельной  обработки  и
достаточна ли их емкость.

      1.5. Очереди

      В любой  системе  движение потока  сообщений может быть задержа-
но из-за  недоступности оборудования.  Например,  требуемые устройства
могут быть уже заняты или многоканальные устройства,  в которые  нужно
войти,  уже заполнены.  В этом случае задержанные сообщения ставятся в

                                - 3 -

"очередь"  -  еще  один  тип  объектов  GPSS/PC.  Учет  этих  очередей
составляет одну из основных функций интерпретатора GPSS/PC.
      Пользователь может определить  специальные  точки  в  модели,  в
которых  нужно  собирать  статистику об очередях.  Тогда интерпретатор
GPSS/PC автоматически будет собирать  статистику  об  очередях  (длину
очереди, среднее время пребывания в очереди и т.д.). Число задержанных
сообщений и продолжительность этих задержек определяется только в этих
заданных точках. Интерпретатор также автоматически подсчитывает в этих
точках общее число сообщений,  поступающих  в  очередь.  Интерпретатор
подсчитывает  среднее  время пребывания   сообщения   в  очереди  (для
каждой очереди),  а  также максимальное число сообщений в очереди.

      1.6. Модельное время

      Для того, чтобы обеспечить  правильную  временную  последова-
тельность  событий  в  модели, организованы часы, хранящие значения
текущего момента в модели. Все отрезки времени моделируемой системы
измеряются целыми значениями. В отличие от обычных часов,  измеряю-
щих  время  в  определенных  единицах,  обычно  в  секундах, часы в
GPSS/PC меняют свое значение только для того, чтобы  указать  время
наступления ближайшего события. Например, если текущее значение ча-
сов  модели  равно 2, а очередное событие должно наступить в момент
времени 7, то значение часов увеличивается сразу на 5 единиц. Отме-
тим, что единицы времени в модели не обязательно должны быть  конк-
ретными  единицами  времени,  такими  как секунда или час. Основной
единицей времени в модели можно выбрать любую единицу, которая поз-
волит получить необходимую точность моделирования.  Важно  помнить,
единицы времени выбираются исходя из требований пользователя к точ-
ности моделирования.

      1.7. Статистика GPSS/PC

      Поскольку целью построения любой модели является исследование
моделируемой  системы, интерпретатор GPSS/PC автоматически собирает
стандартную статистику по каждому типу объектов, занятых в  модели.
      Стандартная  статистика  используется и при отладке модели, и
при оценке самой системы.
         
                   2.  КОДИРОВАНИЕ ОПЕРАТОРОВ GPSS/PC
      
      2.1. Стандартные  числовые  атрибуты

      В  процессе  моделирования  интерпретатор GPSS/PC  автоматически
регистрирует и    корректирует    информацию,   касающуюся   различных
элементов,  используемых в модели.  Большая часть информации  доступна
только  интерпретатору.  Однако,  к некоторым атрибутам объектов может
обращаться и программист,  манипулируя их значениями  согласно  логики
модели.  Такие  атрибуты  называются стандартными числовыми атрибутами
(СЧА).  Каждый объект GPSS/PC имеет свой набор СЧА. Кроме СЧА объектов
существуют  еще  системные  числовые атрибуты,  к которым пользователь
может обращаться в модели,  но не может изменять их значение.  Имя СЧА
состоит   из  двух  частей.  Первая  часть  указывает  групповое  имя,
идентифицирующее тип объекта и тип информации об объекте. Вторая часть
идентифицирует конкретного члена группы.
      Групповое имя состоит  из  одной-двух  букв,  фиксированных  для
информации  об  объектах определенного типа,  например,  Q - ссылка на
текущее значение длины очереди,  QA - целая  часть  среднего  значения
очереди  и т.д.  Объекты GPSS/PC могут быть идентифицированы с помощью

                                - 4 -

числовых или символьных имен.  Если объект идентифицирован  с  помощью
номера, то ссылка на его стандартный числовой атрибут записывается как
СЧАj ,  где j -  номер  объекта  (целое  число)  .  При  символической
идентификации  объекта  ссылка на его стандартный атрибут записывается
как СЧА$<имя>, где <имя> - символьное имя объекта.
      К системным числовым атрибутам относятся следующие величины:

      RNj - число, вычисляемое j датчиком случайных чисел (где
1<=j<=7). Все   датчики   генерируют   последовательность   равномерно
распределенных случайных чисел. Это целое число изменяется от 0 до 999
включительно.
      C1 -   текущее   значение   условного   времени.   Автоматически
изменяется  программой  и устанавливается в 0 управляющими операторами
CLEAR или RESET;
      AC1 -   текущее   значение  абсолютного  времени.  Автоматически
изменяется  программой.  Эта  величина  не  меняется   под   действием
управляющего  оператора RESET и устанавливается в 0 лишь под действием
оператора CLEAR;
      TG1 -  число,  равное  текущему  значению  счетчика  завершений.
Сообщения,  вошедшие  в  блоки  TERMINATE  с  ненулевым  операндом  А,
уменьшают  значение этого счетчика на число,  равное значению операнда
А;
      XN1 -  возвращает  номер  активного  сообщения;
      Z1 - возвращает размер свободной  оперативной  памяти  в байтах;
      М1  -  время  пребывания  в  модели  сообщения,  обрабатываемого
программой в данный момент. Эта величина может изменяться блоком MARK.
      Это время вычисляется следующим образом:
      _             _     _              _     _               _
     |               |   |                |   |                 |
     | Время прохож- |   | Текущее значе- |   | Отметка времени |
 М1 =| дения  сооб-  | = | чение абсо-    | - | обрабатываемого |
     | щением модели |   | лютного услов- |   | в данный момент |
     |_             _|   | ного времени   |   | сообщения       |
                         |_              _|   |_               _|

      PR - приоритет  обрабатываемого в  данный  момент  сообщения.
      Каждое сообщение GPSS/PC имеет уровень приоритета, присваива-
емый  ему в момент создания. Значение приоритета (0-127) присваива-
ется в  блоке GENERATE  или SPLIT. По умолчанию  приоритет равен 0.
При обращении к стандартному числовому атрибуту PR получают  значе-
ние приоритета сообщения, обрабатываемого в данный момент.
      
      Сообщения имеют СЧА:

      Pj - значение  параметра j текущего сообщения.
      MBj -  флаг  синхронизации  :  1  ,  если  сообщение  в  блоке j
принадлежит тому же семейству ,  что и  текущее  сообщение  ;  0  -  в
противном случае.
      Mj ( j<>1 ) -  значение времени,  равное разности абсолютного
модельного времени и содержимого j-го параметра текущего сообщения;
      Запись времени прохождения в параметре  сообщения- Mj (j<>1):
      В поле А блока MARK может быть задан номер j параметра  сооб-
щения.  При  прохождении  сообщения  через такой блок MARK, текущее
значение абсолютного условного времени записывается в j -  м  пара-
метре сообщения. Впоследствии, при обращении, значение стандартного
числового атрибута Mj (j<>1) вычисляется следующим образом:



                                - 5 -

        _            _     _             _      _            _
       |              |   |               |    |              |
       |Время прохож- |   |Текущее значе- |    |Значение j-го |
  Мj = |дения, запи-  | = |чение абсо-    | -  |параметра об- |
 j<>1  |санное в па-  |   |лютного услов- |    |рабатываемого |
       |раметре       |   |ного времени   |    |в настоящий   |
       |_            _|   |_             _|    |момент        |
                                               |сообщения     |
                                               |_            _|

      Блоки имеют СЧА:

      Nj - общее  число  сообщений,  которое  должно войти в j-й блок.
Подсчет ведется программой автоматически.  Например,  N$MET1 - счетчик
числа  входов  в  блок МЕТ1.  Этот счетчик изменяется при каждом входе
сообщения в блок МЕТ1;
      Wj -  текущее  число  сообщений,  которое  находится  в блоке j.
Значение этого счетчика подсчитывается автоматически. Например, W$MET2
- счетчик текущего числа сообщений в блоке МЕТ2.
      Стандартные числовые атрибуты могут использоваться в качестве
операндов практически в любом типе блоков.  Также  значение  любого
СЧА  может входить в большинство операторов описания объектов. Осо-
бенность СЧА является то, что они обеспечивают пользователю  доступ
к характеристикам состояния системы в процессе моделирования.

      2.2. Типы операторов GPSS/PC

      После того, как блок-диаграмма составлена,она должна быть за-
писана  в  форме,  удобной для ввода в ЭВМ. Для этого информация об
объектах GPSS/PC записывается в виде операторов в определенном фор-
мате.Операторы GPSS/PC делятся на следующие типы :
      - операторы описания блоков;
      - операторы описания данных и контроля управления;
      - команды GPSS/PC;

      2.3 Кодирование операторов GPSS/PC

      При  использовании  GPSS/PC  для  ссылок на числа, блоки или
объекты применяются имена. Имя представляет собой алфавитно-цифро-
вую последовательность, длиной до 20 символов, начинающуюся с  бук-
вы.  Допустимо  применение  символов  только латинского алфавита. В
состав имени могут включаться также символы подчеркивания "_". Име-
нами не могут быть коды операторов GPSS/PC, ключевые слова или коды
стандартных числовых атрибутов. При трансляции GPSS/PC присваивает
именам  уникальные  номера,  начиная со  стартового  номера  10000.
      Для принудительного присваивания именам нужных номеров, необ-
ходимо,  перед использованием имен, с помощью оператора EQU присво-
ить именам соответствующие номера.


               3.  БЛОКИ, ОРИЕНТИРОВАННЫЕ НА СООБЩЕНИЯ

      Практически все изменения состояния в моделях GPSS/PC  проис-
ходят  в  результате  входа сообщений в блоки и выполнения подпрог-
рамм, связанных с этими блоками.




                                - 6 -

      3.1. Блок GENERATE

      Блок GENERATE является источником потока сообщений в  модели.
В  данном блоке производится подготовка сообщений и запуск их в мо-
дель через интервалы времени, заданные пользователем. Кроме задания
правильной временной последовательности, пользователь может в блоке
GENERATE задать некоторую информацию об атрибутах сообщений.
      Блок GENERATE имеет следующий формат записи:
               GENERATE [<A>],[<B>],[<C>],[<D>],[<E>]
      В поле А указывается время, которое определяет интервал между
моментами генерации сообщений блоком GENERATE. Операнд А может быть
именем, положительным целым числом или непосредственно СЧА.  Нельзя
использовать в качестве операнда параметры сообщения.
      В  поле В задается модификатор, который изменяет значения ин-
тервала генерации сообщений по сравнению с интервалом, указанным  в
поле А. Операнд В может быть именем, положительным целым числом или
непосредственно  СЧА. Нельзя использовать в качестве операнда пара-
метры сообщения.
      При вычислении  разницы значений, заданных в полях А и В, по-
лучается нижняя граница интервала, а при вычислении суммы - верхняя
граница. После генерации очередного  сообщения выбирается  число из
полученного интервала, и  это будет значение времени, через которое
следующее сообщение выйдет из блока GENERATE.
      Например:
               GENERATE   25, 10
      В этом случае генерация сообщений производится по равномерно-
му закону из интервала - (15,35).
      Следует обратить внимание на то, что сообщения генерируются с
заданными интервалами только в том случае, если у блоков, следующих
за блоком  GENERATE (например: GATE, TEST, SEIZE или ENTER), не вы-
ставлены блокирующие условия. Каждое последующее сообщение формиру-
ется только тогда, когда  сообщение из блока GENERATE входит в сле-
дующий блок.
      Из-за возможных воздействий на модель при изменении заданного
интервала  генерации  сообщений  нежелательно,  чтобы  после  блока
GENERATE следовал блок, создающий блокирующее условие.
      В поле С задается начальная задержка. Начальная задержка  от-
носится  к  моменту формирования первого сообщения в блоке GENERATE
как при первом просчете модели, так  и  после  выполнения  операции
CLEAR.  Начальная  задержка  - это момент времени, в который первое
сгенерированное сообщение должно выйти из блока GENERATE; поля А  и
В  на задержку сообщения влияния не имеют. Начальная задержка может
быть меньше, равна или больше среднего времени, заданного в поле А.
Операнд С может быть именем, положительным целым числом или  непос-
редственно  СЧА.  Нельзя использовать в качестве операнда параметры
сообщения.
      В поле D задается предел генерации. Эта величина представляет
собой максимальное число сообщений, которое будет создано  в  блоке
GENERATE.  Операнд  D может быть именем, положительным целым числом
или непосредственно СЧА. Нельзя использовать  в  качестве  операнда
параметры  сообщения.  Если поле D пусто, блок генерирует неограни-
ченное число сообщений. Предел генерации инициализируется  повторно
операцией CLEAR.
      Поле  Е  определяет приоритет сообщений. Операнд Е может быть
именем, положительным целым числом или непосредственно СЧА.  Нельзя
использовать  в  качестве операнда параметры сообщения. Если поле Е
не задано, приоритет по умолчанию равен 0.


                                - 7 -

      При повторном описании блока GENERATE при помощи нового  опе-
ратора  описания блока интерпретатор GPSS просматривает все находя-
щиеся в данный момент модели сообщения и проверяет, есть  ли  среди
них  сообщения,  связанные  с  повторно описываемым блоком GENERATE
(таких сообщений может и не быть, если данный блок уже  создал  за-
данное  число сообщений). Эти сообщения, если они есть, уничтожают-
ся. Операнды нового блока GENERATE  заменяют  операнды  предыдущего
блока  GENERATE и затем создается новое сообщение, используя специ-
фикации нового блока.
      При использовании блока GENERATE необходимо помнить, что  со-
общение  не должно входить в блок GENERATE. Если сообщение пытается
это сделать, возникает ошибка выполнения.
      Если в операторе описания блока GENERATE в поле D было задано
максимальное число генерируемых блоком сообщений, и заданное  число
сообщений  уже вышло из этого блока, т.е. блок уже закончил работу,
то в процессе моделирования этот  блок  может  быть  снова  запущен
только в одном из двух случаев:
      1)  выполнены операции, заданные оператором CLEAR, и произво-
дится повторный запуск всех блоков GENERATE;
      2) блок GENERATE описан повторно.

      3.2. Блок TERMINATE

      Блок TERMINATE имеет следующий формат записи:
               TERMINATE [<A>]
      Блок TERMINATE удаляет из модели входящие сообщения.
      В поле А задается число единиц, на которое этот блок изменяет
содержимое счетчика завершений, определяющего момент окончания  мо-
делирования.  Операнд А может быть именем, положительным целым чис-
лом или СЧА. По умолчанию значение, определяемое полем  А, равно 0.
Если поле А пусто, то сообщение уничтожается, а содержимое счетчика
не изменяется.
      Когда пользователь подготавливает  модель,  он  задает  время
счета,  указывая  в  операторе  START значение счетчика завершений.
Поскольку различные пути сообщений в модели имеют различные смысло-
вые значения, каждый блок TERMINATE может либо уменьшать,  либо  не
уменьшать  содержимое счетчика завершений. Если содержимое счетчика
уменьшилось до 0, счет завершается.
      Стандартным числовым атрибутом, связанным с описываемым  опе-
ратором,  является  TG1  - число, равное текущему значению счетчика
завершений. TG1 возвращает содержимое счетчика завершений,  которое
уменьшается  блоком TERMINATE при заданном операнде А. Эта величина
первоначально задается оператором START и указывает  на  завершение
моделирования, когда становится равной 0.

      3.3. Блок ADVANCE

      Блок ADVANCE имеет следующий формат записи:
               ADVANCE    <A>,[<B>]
      Блок  ADVANCE  задерживает  продвижение сообщения на заданный
период времени. В поле А задается среднее время пребывания  сообще-
ния в блоке ADVANCE. Содержимое поля А может быть именем, любым це-
лым числом, в  том числе и 0 или СЧА.
      В поле В указывается способ  модификации  среднего  значения,
заданного  в поле А. Операнд В может быть именем, положительным це-
лым числом или СЧА.



                                - 8 -

      3.4. Блок ASSIGN

      Блок ASSIGN имеет следующий формат записи:
               ASSIGN  <A>,<B>,[<C>]
      Блок  ASSIGN заменяет, увеличивает или уменьшает текущее зна-
чение параметра сообщения на заданное значение.
      В поле А задается  номер  параметра,  которому  присваивается
значение.  Операнд А может быть именем, положительным целым числом,
СЧА и следующими за ними знаками +,- . Если значение параметра нуж-
но увеличить или уменьшить, то справа в поле А ставится знак сложе-
ния или вычитания.
      Поле  В определяет значение, которое следует добавить или вы-
честь из значения параметра, заданного аргументом поля А, или заме-
нить его. Если такой параметр не существует, то он создается.  Опе-
ранд  В  может быть именем, любым целым числом или СЧА.
      Пример:
               ASSIGN    2000+,-3
      В этом примере значение поля В, равное -3, добавляется к зна-
чению параметра с номером 2000, который задан операндом А. Если та-
кой параметр в сообщении отсутствует, то он создается со значением,
равным 0, до того, как будет произведено добавление. Тогда значение
параметра сообщения становится равным -3.

      3.5. Блок MARK

      Блок MARK имеет следующий формат записи:
               MARK [<A>]
      Блок MARK либо заменяет значение отметки времени сообщения на
текущее  значение абсолютного условного времени (операнд А не опре-
делен), либо записывает значение условного времени в заданный пара-
метр сообщения (при использовании операнда А).
      Поле А содержит номер параметра, в который записывается  зна-
чение  абсолютного  условного времени. Если такого параметра не су-
ществует, то он создается. Операнд А может быть именем, положитель-
ным целым числом или СЧА.
      Исходное значение времени создания сообщения может быть заме-
нено  на текущее значение абсолютного условного времени при прохож-
дении сообщения через блок MARK. Каждое сообщение  имеет  следующие
два стандартных числовых атрибута, связанных с временем прохождения
участков модели данным сообщением:
      1)  М1 - время прохождения сообщением модели.
      2) Mj ( j<>1 ) - промежуточное  время  прохождение сообщением
участка модели.

      4. БЛОКИ, ИЗМЕНЯЮЩИЕ ПОРЯДОК ПРОХОЖДЕНИЯ БЛОКОВ СООБЩЕНИЯМИ

      Обычно  интерпретатор пытается продвинуть сообщение к следую-
щему по номеру блоку. Однако существуют блоки, которые позволяют
изменять номер следующего блока.

      4.1. Блок TRANSFER

      Блок TRANSFER имеет следующий формат:
              TRANSFER  [<A>],[<B>],[<C>],[<D>]
      Блок TRANSFER является основным средством, позволяющим напра-
вить сообщение к любому блоку модели.
      Поле А задает режим выбора следующего блока, к которому долж-
но перейти сообщение.

                                - 9 -

      Существуют следующие режимы работы блока TRANSFER:
      - безусловный (пробел);
      - статистический (.);
      - BOTH;
      Кроме  того, операнд А может быть дробным числом, именем, по-
ложительным целым числом или СЧА.
      Поля В и С задают возможные значения номеров следующих блоков
или их положение. Использование значений описано  при  рассмотрении
определенных  режимов  выбора.  Операнды могут быть именем, положи-
тельным целым числом или СЧА. Если поле В пусто, ассемблер  записы-
вает в нем номер блока, следующего за блоком TRANSFER.
      4.1.1. Безусловный режим выбора
      Если операнд А пропущен, то блок TRANSFER работает  в  безус-
ловном  режиме. Входящее в блок TRANSFER сообщение переходит к бло-
ку, указанному в поле В. Если сообщение в этот блок войти не может,
попытка направить сообщение к какому-либо другому блоку не произво-
дится.
      4.1.2. Статистический режим выбора
      Когда операнд А не является  зарезервированным  словом,  блок
TRANSFER работает в статистическом режиме выбора.
      Значение  аргумента,  записанного  после  точки (.) в поле А,
рассматривается как трехзначное число, показывающее  (в  частях  от
тысячи),  какой процент входящих в блок сообщений следует направить
к блоку, указанному в поле С. Остальные  сообщения  направляются  к
блоку,  указанному в поле В, или к следующему по номеру блоку, если
операнд В пропущен. Для каждого сообщения выбирается один  из  двух
возможных  вариантов;  после  того как выбор сделан, второй вариант
для этого сообщения не рассматривается.
      Например,
            BCD  TRANSFER  .709, BLK1, BLK2
      Из общего числа сообщений, входящих в  блок  BCD,  в  среднем
.709 будут пытаться войти в блок BLK2. Остальные .209 будут пытать-
ся войти в блок BLK1.
      4.1.3. Режим BOTH
      Если  в  поле  А  стоит  зарезервированное  слово  ВOTH, блок
TRANSFER работает в режиме BOTH.
      В этом режиме каждое входящее сообщение сначала пытается  пе-
рейти  к  блоку,  указанному в поле В. Если это сделать не удается,
сообщение пытается перейти к блоку, указанному в поле С. Если сооб-
щение не сможет перейти ни к тому, ни к другому блоку, оно остается
в блоке TRANSFER и будет повторять в том порядке  попытки  перехода
при  каждом  просмотре  списка текущих событий, до тех пор, пока не
сможет выйти из блока TRANSFER.

      4.2. Блок TEST

      Блок TEST имеет следующий формат:
                TEST <X>  <A>,<B>,[<C>]
      Блок TEST определяет номер следующего блока  для  вошедшего в
него сообщения в зависимости от того, выполняется требуемое условие
или нет. Блок управляет потоком сообщений, проверяя  выполнение ал-
гебраических отношений между значениями СЧА, заданных в полях А и В.
      Операнды А и В - сравниваемые величины,  которые  могут  быть
именем, любым целым числом или СЧА.
      Если  в полях А и В  заданы СЧА, то они  должны быть записаны
как СЧАj (например : очередь Q1). Необходимо присвоить им  номера в
начале программы с помощью оператора EQU.


                                - 10 -

      Во  вспомогательном  поле  операции  оператора описания блока
TEST - <X> - записывается один из шести условных операторов:

      - 'L' - меньше. Отношение истинное, если  значение  аргумента
поля А меньше значения аргумента поля В;
      -  'LE' - меньше или равно. Отношение истинное, если значение
аргумента поля А меньше или равно значению аргумента поля В;
      - 'E' - равно. Отношение истинное, если значения обоих  аргу-
ментов равны;
      - 'NE' - не равно. Отношение истинное, если значения аргумен-
тов полей А и В не равны;
      -  'G'  - больше. Отношение истинное, если значение аргумента
поля А больше значения аргумента поля В;
      - 'GE' - больше или равно. Отношение истинное, если  значение
аргумента поля А больше или равно значению аргумента поля В.
      Если  отношение СЧА, заданных в полях А и В, истинно, сообще-
ние переходит к следующему блоку. Если отношение  ложно,  сообщение
переходит к блоку, номер которого задан полем С.
      C - номер блока для входящего сообщения, если отношение вели-
чин,  заданных  в  полях А и В, ложно. Операнд C может быть именем,
положительным целым числом или СЧА.
      Блок TEST может работать в двух режимах:
      1) в режиме безусловного входа. Если в  поле  С  задан  номер
следующего блока, сообщения никогда не задерживаются на входе блока
TEST.  Если  заданное  в блоке TEST отношение истинно, то сообщение
пытается перейти к следующему по номеру блоку. Если отношение  лож-
но,  сообщение  пытается  перейти  к блоку заданному полем С. Выбор
следующего блока производится только один раз (в момент входа сооб-
щения в блок TEST);
      2) в режиме условного входа. Если поле  С  блока  TEST  пусто
(т.е.  не  указан альтернативный выход), сообщения не могут войти в
блок TEST до тех пор, пока условия не изменятся таким образом,  что
отношение будет истинно. Если отношение истинно, сообщение входит в
блок TEST и пытается перейти к следующему по номеру блоку.


      5.  БЛОКИ  ДЛЯ  ОБРАБОТКИ СООБЩЕНИЙ, ПРИНАДЛЕЖАЩИХ ОДНОМУ
                            СЕМЕЙСТВУ

      Блоки GENERATE являются основным средством создания сообщений
и ввода их в модель. Вход сообщений в блок GENERATE не допускается.
Помимо блока GENERATE, для создания  сообщений  используется  также
блок  SPLIT,  который создает заданное число копий вошедшего в блок
сообщения. Эти копии принадлежат к тому же семейству, что  и  поро-
дившее их сообщение.
      Блок  TERMINATE является основным средством уничтожения сооб-
щений и удаления их из модели. Для удаления сообщений,  принадлежа-
щих к одному семейству, может быть также использован блок ASSEMBLE.

      5.1. Блок SPLIT

      Блок SPLIT имеет следующий формат:
               SPLIT  <A>,[<B>],[<C>]
      Блок SPLIT выполняет функцию копирования входящего в него со-
общения, которое называется исходным или порождающим.
      В  поле  А  задается число создаваемых копий. Операнд А может
быть именем, положительным целым или СЧА. Если вычисленное значение
аргумента  поля А равно  нулю, то блок  SPLIT не выполняет  никаких

                                - 11 -

операций. После создания копий сообщение  пытается перейти к следу-
ющему по номеру блоку. Все копии  формируются в момент входа порож-
дающего сообщения в блок SPLIT.
      Поле В  задает номер  следующего блока,  к которому переходят
копии исходного сообщения, причем значение вычисляется  для  каждой
копии  отдельно. Операнд В может быть  именем, положительным целым,
СЧА.
      В поле С может быть задан номер параметра, используемого  для
присвоения  копиям  последовательных номеров. Операнд С может быть
именем, положительным целым, СЧА.
      Каждая новая копия становится членом семейства сообщений, по-
рожденного одним исходным сообщением, которое было  создано  блоком
GENERATE. Сообщения, принадлежащие к одному семейству, объединяются
интерпретатором в список.

      5.2. Блок ASSEMBLE

      Блок ASSEMBLE имеет следующий формат:
               ASSEMBLE  <A>
      Блок ASSEMBLE объединяет заданное число сообщений,  принадле-
жащих к одному семейству, в одно сообщение (т.е. осуществляет сбор-
ку заданного числа сообщений). После сборки из блока ASSEMBLE выхо-
дит  только одно сообщение, которое переходит в следующий по номеру
блок. В одном и том же блоке ASSEMBLE возможна одновременная сборка
сообщений  нескольких  семейств.  Когда  сообщение  входит  в  блок
ASSEMBLE, интерпретатор просматривает семейство, к которому принад-
лежит  это сообщение, и проверяет, есть ли другое сообщение из того
же семейства в данном блоке ASSEMBLE.
      Поле А задает число сообщений,  участвующих в сборке. Операнд
А может быть именем, положительным целым, СЧА.

      5.3. Блок MATCH

      Блок MATCH имеет следующий формат:
               MATCH  <A>
      Блок MATCH используется для синхронизации движения двух сооб-
щений,  принадлежащих к одному семейству, без удаления этих сообще-
ний из модели.
      Блоки MATCH не объединяют синхронизируемые сообщения. Синхро-
низация осуществляется путем подбора пар сообщений из одного семей-
ства и задержки этих сообщений до тех пор, пока  оба  сообщения  из
одной  пары  не поступят в заданные точки модели. Сообщения никогда
не задерживаются в блоке MATCH. Сообщения, для которых  выполнилось
условие  синхронизации,  переходят  к следующему по номеру блоку. В
одной паре блоков MATCH могут одновременно находиться  в  состоянии
синхронизации  пары сообщений из различных семейств. Возможна также
одновременная синхронизации пар сообщений  из  одного  семейства  в
нескольких блоках MATCH.
      Поле  А задает имя или номер другого блока MATCH, называемого
"сопряженным блоком MATCH". Если такого блока нет, происходит оста-
нов по ошибке. Операнд А может быть именем, положительным целым,СЧА.
      Допускается использование блока MATCH в качестве сопряженного
самому себе.
      Стандартным  числовым атрибутом, связанным с описываемым опе-
ратором является:
      МВ<номер блока> - флаг синхронизации. Возвращает 1, если  со-
общение,  находящееся  в  блоке <номер блока> принадлежит к тому же
семейству, что и текущее.

                                - 12 -

                      6.  СПИСКИ ПОЛЬЗОВАТЕЛЯ

      В GPSS/PC имеется тип списков  сообщений, названных  списками
пользователя, которые дают возможность удалять сообщения из списков
текущих событий и переводить их во временно  неактивное  состояние.
Впоследствии эти сообщения возвращаются в список текущих событий.

      6.1. Блок LINK

      Блок LINK имеет следующий формат записи:
               LINK  <A>,<B>,[<C>]
      Блок LINK удаляет сообщение из списка текущих событий и поме-
щает его в список пользователя.
      Поле А задает номер списка пользователя, в который будет  по-
мещено  вошедшее  сообщение.  Операнд А может быть именем, положи-
тельным целым, СЧА.
      Поле В задает алгоритм  упорядочивания  списка  пользователя.
Операнд  В  может  быть LIFO, FIFO, именем, целым или СЧА.
      Допустимые операнды:
      - FIFO - вошедшее сообщение помещается в конец списка пользо-
вателя;
      - LIFO - вошедшее сообщение помещается в начало списка  поль-
зователя;
      - номер параметра - входящие сообщения располагаются в списке
пользователя  в соответствии со значением указанного параметра. Со-
общения располагаются по возрастанию значения этого параметра.  Чем
меньше значение параметра, тем ближе сообщение к началу списка, чем
больше значение параметра - тем ближе сообщение к концу списка.
      Поле С, указывающее альтернативный  выход,  используется  при
описании  различных ситуаций, возникающих в очередях. Операнд С мо-
жет быть  именем, положительным целым, СЧА.
      Если поле С пусто, индикатор, связанный  с  заданным  списком
пользователя,  устанавливается  в единицу. Это приводит к тому, что
все входящие сообщения безусловно заносятся в список  пользователя,
определенный полем А в том порядке, какой задан полем В.
      Если поле С не пустое, проверяется индикатор списка пользова-
теля.  Если индикатор списка установлен в единицу, вошедшее сообще-
ние заносится в список пользователя в том порядке,  какой  задан  в
поле  В.  Если  индикатор списка установлен в "0", он переводится в
единицу, и вошедшее сообщение переходит к блоку, заданному  в  поле
С.
      Пример: LINK ONHOLD, FIFO
      В  этом  примере вошедшее сообщение помещается в конец списка
пользователя с именем ONHOLD.
      Стандартными числовыми атрибутами, связанными  с  описываемым
оператором являются:
      CA<номер списка> - среднее число сообщений в списке пользова-
теля с именем <номер списка>.
      CC<номер списка> - общее число сообщений в списке пользовате-
ля с именем <номер списка>.
      CH<номер списка> - текущее число сообщений в списке пользова-
теля с именем <номер списка>.
      CM<номер списка> -  максимальное  число  сообщений  в  списке
пользователя с именем <номер списка>.
      CT<номер списка> - среднее время пребывания сообщения в спис-
ке  пользователя  с  именем  <номер списка>, которое рассчитывается
следующим образом:


                                - 13 -

                          вычисленный временной интеграл
       CT<номер списка> = ------------------------------
                          общее число входов

      6.2. Блок UNLINK

      Блок UNLINK имеет следующий формат записи:
           UNLINK [<X>]  <A>,<B>,[<C>],[<D>],[<E>],[<F>]
      Блок UNLINK удаляет сообщения из списка пользователя.  Указа-
тели  отношения,  записываемые во вспомогательном поле операции <X>
определяют, какое явное условие следует рассматривать. Если  указа-
тель отношения не задан, предполагается отношение равенства (Е).
      Указатели отношения следующие:
      -  'G'  - больше. Отношение истинно, если значение параметра,
заданного в поле D, больше значения, заданного в поле Е;
      - 'GE' - больше или равно. Отношение истинно,  если  значение
параметра, заданного в поле D, больше или равно значению, заданному
в поле Е;
      - 'L' - меньше. Отношение истинно, если  значение  параметра,
заданного в поле D, меньше значения, заданного в поле Е;
      - 'LE' - меньше или равно. Если значение параметра, заданного
в поле D, меньше или равно значению, заданному в поле Е, то отноше-
ние истинно;
      -  'E'  -  равно. Отношение истинно, если значение параметра,
заданного в поле D, равно значению, заданному в поле Е;
      - 'NE' - не равно. Отношение истинно, если значение параметра,
заданного в поле D, не равно значению, заданному в поле Е.
      Поле А задает номер списка пользователя, из которого удаляют-
ся  одно или несколько сообщений. Операнд А может быть  именем, по-
ложительным целым или СЧА.
      В поле В указывается номер блока, к которому  переходят  уда-
ленные  сообщения.  Операнд В может быть  именем, положительным це-
лым, СЧА.
      Поле С задает счетчик числа удаленных  сообщений.  Операнд  С
может быть "ALL", именем, положительным целым или СЧА. Значение СЧА
является  числом удаляемых  сообщений. Может быть задано "ALL", что
означает удаление всех сообщений.
      Пример использования блока UNLINK:
               UNLINK ONHOLD, REENTRY, 1
      Первое сообщение из списка пользователя с именем ONHOLD поме-
щается в блок с именем REENTRY. Оно заносится в список текущих  со-
бытий  за сообщением с таким же приоритетом. Входящее сообщение пе-
реходит к следующему блоку.
      Стандартными  числовыми  атрибутами, связанными с описываемым
оператором являются те же, что и для LINK.


                       7.  УСТРОЙСТВА

      Устройства используются при моделировании систем для имитации
работы  оборудования единичной емкости, например, процессора, кана-
лов передачи данных, устройств ввода-вывода, линии связи и т.д. Та-
кое оборудование в любой момент времени может  обрабатывать  только
одно сообщение.





                                - 14 -

      7.1. Блок SEIZE

      Блок SEIZE имеет следующий формат :
               SEIZE <A>
      Операнд А может быть именем, положительным целым или СЧА.
      Свободный блок  SEIZE позволяет вошедшему в него сообщению
занять указанное устройство. Блок SEIZE задерживает  сообще-
ние,  если устройство занято или находится в состоянии недоступнос-
ти.
      В поле А задается имя занимаемого устройства.
      Стандартными числовыми атрибутами,  связанными  с  оператором
SEIZE являются:
      F<номер устройства> - возвращает 1, если устройство занято,
0 - если свободно.
      FС<номер устройства> - общее число входов в устройство.
      FI<номер устройства> - возвращает 1, если устройство обслужи-
вает прерывание, 0 в противном случае.
      FR<номер  устройства> - коэффициент использования устройства,
выражается в тысячных долях и возвращает целое число от 0 до 1000.
      FT<номер устройства> - среднее время занятости устройства од-
ним сообщением.
      FV<имя устройства> - возвращает 1, если устройство доступно и
0 - если недоступно.

      7.2. Блок RELEASE

      Блок RELEASE имеет следующий формат:
               RELEASE   <A>
      Блок RELEASE предназначен для освобождения устройства тем со-
общением,  которым оно было занято.
      Если сообщение обрабатывается устройством, то с помощью блока
RELEASE оно освобождает устройство и переходит к следующему  после-
довательному  блоку.
      Операция  освобождения выполняется немедленно после входа со-
общения в блок RELEASE. В поле А задается номер освобождаемого уст-
ройства. Операнд А может быть именем, положительным целым или СЧА.
      Стандартными  числовыми  атрибутами, связанными с описываемым
оператором являются те же, что и для SEIZE.


                  8.  МНОГОКАНАЛЬНЫЕ УСТРОЙСТВА

      При моделировании систем, объекты GPSS/PC типа  "многоканаль-
ные  устройства" используются для имитации работы объектов реальных
систем, параллельно обрабатывающих  поступающие  заявки.

      8.1. Оператор описания многоканального устройства
      Оператор описания многоканального устройства имеет  следующий
формат:
               <NAME>  STORAGE  <A>
      Оператор STORAGE определяет емкость многоканального устройст-
ва в текущей модели.
      Поле  метки  определяет  имя многоканального устройства. Поле
может быть именем. Операнд А определяет объем многоканального  уст-
ройства. Операнд А может быть положительным целым.
      Стандартными числовыми атрибутами, связанными с  описываемым
оператором, являются:


                                - 15 -

      -  S<номер  многоканального устройства> - текущее содержимое.
Возвращает емкость заполненной части устройства;
      - SА<номер многоканального устройства> - среднее  содержимое.
Возвращает целую часть среднего заполнения устройства;
      - SС<номер многоканального устройства> - счетчик числа входов
в многоканальное устройство;
      - SЕ<номер многоканального устройства> - незаполненность уст-
ройства.  Возвращает 1, если устройство использовалось не полностью
и 0 - в противном случае;
      -  SF<номер  многоканального устройства> - заполненность уст-
ройства. Возвращает 1, если устройство используется полностью , 0 -
в противном случае;
      -  SR<номер многоканального устройства> - коэффициент исполь-
зования многоканального устройства, выраженный в долях тысячи. Воз-
вращает целое в интервале от 0 до 1000;
      - SM<номер многоканального устройства> - максимально  занятая
емкость устройства;
      - SТ<номер многоканального устройства> - среднее время пребы-
вания сообщения в устройстве;
      - SV<номер многоканального устройства> - доступность устройс-
тва.  Возвращает  1, если устройство доступно, 0 - в противном слу-
чае.
      Блоки, связанные с описываемым оператором : ENTER, LEAVE.

      8.2. Блок ENTER

      Блок ENTER имеет следующий формат записи:
               ENTER   <A>,[<B>]
      Блок ENTER позволяет вошедшему сообщению использовать  много-
канальное  устройство.  Сообщение  может  быть задержано на входе в
блок, если многоканальное устройство заполнено или имеющейся емкос-
ти недостаточно или устройство в данный момент недоступно.
      В поле А указывается номер или имя многоканального  устройст-
ва, куда входит сообщение. Операнд может быть именем, положительным
целым или СЧА.
      В поле В содержится число занимаемых  единиц  многоканального
устройства. Если поле В пусто, то предполагается что занимается од-
на  единица.  Если это значение равно нулю, то сообщение никогда не
задерживается на входе, а блок рассматривается как нерабочий.  Опе-
ранд может быть именем, положительным целым или СЧА.
      Стандартными числовыми атрибутами, связанными с описываемым
оператором являются те же, что и для STORAGE и :
      - R<имя многоканального устройства> -  емкость  незаполненной
части устройства;

      8.3. Блок LEAVE

      Блок LEAVE имеет следующий формат:

               LEAVE <A>,[<B>]
      Блок LEAVE освобождает определенное число единиц многоканаль-
ного устройства.
      Занятый объем многоканального устройства уменьшается на число
освобождаемых единиц. Оставшаяся емкость многоканального устройства
увеличивается  на ту же величину. Счетчик числа входов не изменяет-
ся. Недоступность многоканального  устройства  не  влияет  на  блок
LEAVE.


                                - 16 -

      Поле А блока LEAVE определяет  номер или имя  многоканального
устройства. Операнд может быть именем, положительным целым или СЧА.
      Поле В - число освобождаемых единиц многоканального устройст-
ва. Операнд может быть  именем, положительным  целым или СЧА.  Если
это  поле  пусто,  предполагается 1. Число  освобождаемых единиц не
должно превышать текущее содержимое многоканального устройства.
      Стандартные числовые атрибуты, связанные с описываемым опера-
тором, те же, что и для ENTER.

      8.4. Блоки GATE SNE, GATE SF, GATE SNF, GATE SE, GATE SV

      Блоки GATE имеют следующий формат:
               GATE <X>  <A>,<B>

      Блоки GATE позволяют управлять движением сообщений в  модели,
в соответствии со значением логических операторов, связанных с мно-
гоканальным устройством (в поле Х). К этим операторам относятся:
      - SNEj - многоканальное устройство j не пусто;
      - SEj  - многоканальное устройство j пусто;
      - SNFj - многоканальное устройство j заполнено;
      - SFj  - многоканальное устройство j не заполнено;
      - SNVj - многоканальное устройство j не доступно;
      - SVj - многоканальное устройство j доступно.
      Блок  GATE  может задержать сообщение на входе, если не задан
альтернативный выход.
      Поле А  определяет имя  многоканального устройства, состояние
которого  проверяется. Операнд  А может  быть именем, положительным
целым числом или СЧА.
      Поле В - альтернативный блок, если логический  атрибут  имеет
значение "ложь". Операнд В  может быть  именем, положительным целым
или СЧА. Если поле В определено, то оно должно содержать метку бло-
ка, допустимую для текущей модели.


                         9.  ОЧЕРЕДИ

      В GPSS/PC объекты типа "очередь" вводятся для сбора статисти-
ческих  данных. Статистика  об очередях  собирается в моменты входа
сообщения в блок QUEUE (вход в очередь) или в блок DEPART (выход из
очереди ).  С объектом "очередь"  связаны два  типа блоков:  QUEUE,
DEPART.

      9.1. Блок QUEUE

      Формат записи блока QUEUE:
               QUEUE <A>,[<B>]
      Блок QUEUE увеличивает длину очереди.
      В поле А задается номер или имя очереди, к длине которой  до-
бавляются  единицы. Операнд  может быть именем, положительным целым
или СЧА.
      Поле  В определяет число единиц, на которое увеличивается те-
кущая длина очереди. Если поле В пусто,  то  прибавляется  единица.
Операнд  может быть именем, положительным целым или СЧА.
      Стандартные числовые атрибуты, связанные с описываемым опера-
тором, следующие:
      - Q - текущая длина очереди;
      - QА - средняя длина очереди;
      - QС - общее число входов в очередь;

                                - 17 -

      - QМ - максимальная длина очереди;
      - QТ - среднее время ожидания в очереди;
      - QХ - среднее время ожидания в очереди для сообщений с нену-
левым временем задержки;
      - QZ - число входов в очередь с нулевым временем задержки.

      9.2. Блок DEPART

      Блок DEPART имеет следующий формат:
               DEPART <A>,[<B>]
      Блок DEPART служит для уменьшения длины очереди.
      В поле А задается номер или имя очереди, длину которой  нужно
уменьшить.  Операнд может быть именем, положительным целым или СЧА.
      В поле В задается число единиц, на которое уменьшается  длина
очереди.  Это число не должно превышать текущую длину очереди. Если
поле В пусто, длина очереди уменьшается на единицу.  Операнд  может
быть именем, положительным целым или СЧА.


                10. ОПЕРАТОРЫ КОНТРОЛЯ УПРАВЛЕНИЯ

      10.1. Оператор START

      Оператор START имеет следующий формат записи:
               START <A>,[<B>],<C>,[<D>]
      Оператор START используется для инициирования начала  модели-
рования.
      В поле А задается значение счетчика завершений, определяющего
момент окончания прогона модели. В процессе счета  сообщения  будут
входить в блоки TERMINATE. В поле А блока TERMINATE может задавать-
ся число единиц, вычитаемое из счетчика завершений, заданного в по-
ле А оператора START, при входе сообщения в блок TERMINATE. Операнд
А может быть положительным целым.
      В  -  операнд вывода статистики. Операнд может быть "NP" либо
опущен. Задание "NP" в поле В приводит к блокировке вывода  статис-
тики. По умолчанию выводится стандартная статистика.
      Поле  С не используется. Сохраняется по аналогии с описаниями
других версий GPSS.
      Поле D определяет необходимость  вывода  содержимого  списков
текущих  и  будущих событий. Операнд D может быть положительным це-
лым.
      Моделирование идет до тех пор, пока счетчик завершения  моде-
лирования, определенный операндом А, не достигнет 0. Для уменьшения
счетчика используется блок TERMINATE.
      Моделирование  может закончиться раньше, если достигнута гра-
ница времени, определенная оператором  SIMULATE,  или  если  нажата
клавиша [Esc] , или если обнаружены ошибочные условия.
      Операнды  В  и  D используются для контроля неотформатирован-
ной статистики. Если не используется операнд В, то  выводится неот-
форматированная статистика. Если операнд D не равен 0, то выводятся
списки текущих и будущих событий. В других случаях они не выводятся.
      Стандартный числовой атрибут, связанный с описываемым  опера-
тором - TG1 - счетчик завершения.

      10.2. Оператор RESET

      Формат записи оператора:
                RESET

                                - 18 -

      Оператор RESET сбрасывает в ноль статистику и атрибуты систе-
мы.Действие оператора RESET можно описать следующим образом:
      - значение  относительного условного  времени (C1) устанавли-
вается в ноль;
      - значение абсолютного условного времени (AC1) остается неиз-
менным;
      - все датчики псевдослучайных чисел остаются неизменными.
      Счетчики блоков (Nj) сбрасываются в ноль.

      10.3. Оператор CLEAR

      Формат записи оператора CLEAR:
                CLEAR
      Оператор CLEAR сбрасывает всю накопленную статистику, удаляет
все  сообщения из модели и устанавливает отсчет сгенерированных со-
общений для блока GENERATE, начиная с 1.
      Когда выполняется оператор CLEAR :
      - содержимое всех блоков становится равным 0;
      - все сообщения удаляются из модели;
      - текущие счетчики устанавливаются в 0;
      - системное время устанавливается в 0;
      - устройства незаняты и доступны;
      - многоканальные устройства становятся свободными и доступными;
      - общие счетчики устанавливаются равными 0;
      - минимальные и максимальные значения устанавливаются равными
        текущему содержимому очередей, списков пользователя и
        многоканальных устройств;
      - состояние датчиков псевдослучайных чисел не изменяется;
      - внутренний счетчик генерируемых сообщений в блоке GENERATE
        устанавливается в 0;

      10.4. Оператор EQU

      Оператор  предназначен  для присвоения числовых значений име-
нам, используемым в модели.
      Оператор имеет следующий формат:
                <NAME>  EQU  <X>    , где
      NAME - имя в поле метки оператора,
      X - выражение.
      Имена удаляются из тела программы, находящейся в буфере, пос-
ле присвоения им числовых значений. Операторы EQU также не  включа-
ются в тело модели в буфере Редактора GPSS/PC. Однако повторным оп-
ределением  и вводом новых операторов EQU, имена могут быть переоп-
ределены. В поле метки операторов EQU не могут использоваться метки
блоков.

      10.5. Оператор SIMULATE

      Оператор предназначен для задания верхней  временной  границы
моделирования. Время - реальное, измеряется в минутах.
      Оператор имеет следующий формат:
                SIMULATE  <A>  , где
      A - предел времени моделирования в минутах.
      Пример:
                SIMULATE  120
      В примере задается лимит времени, равный 2 часам. Если реаль-
ное время прогона модели достигает предельного значения, то модели-
рование завершается.

                                - 19 -


                             ЛИТЕРАТУРА
                             
      1. Шрайбер Т.Дж. Моделирование на GPSS. - М.: Машиност-
роение, 1980. - 592 с.
     
